name: Auto Version
on:
#   pull_request:
#     types:
#     - closed
#     branches:
#     - main
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  PyTest:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Install Python dependencies
          uses: py-actions/py-dependency-install@v4
          with:
            path: "app/requirements.txt"
        - name: Change Dir
          run: |
            ls -la
        - name: GitHub Action for pytest
          uses: cclauss/GitHub-Action-for-pytest@0.5.0
          with:
            args: pytest tests/
  MakeRelease:
    needs: PyTest
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: Get Version Tag
          id: version
          uses: paulhatch/semantic-version@v5.0.2
          with:
            tag_prefix: ''
            major_pattern: "Major"
            minor_pattern: "Minor"
            version_format: "${major}.${minor}.${patch}-prerelease${increment}"
            change_path: "app"
            # search_commit_body: true
            # If this is set to true, *every* commit will be treated as a new version.
            bump_each_commit: true
        - name: Find and Replace
          uses: jacobtomlinson/gha-find-replace@v3
          with:
            include: app/Dockerfile
            find: ENV VERSION=\d{1,3}\.\d{1,3}\.\d{1,3}
            replace: ENV VERSION=${{ steps.version.outputs.version_tag }}
            regex: true
        - name: Commit & Push Version Change
          uses: actions-js/push@master
          with:
            message: Auto Version Bump
            github_token: ${{ secrets.GITHUB_TOKEN }}
        - name: Create Release
          uses: ncipollo/release-action@v1
          with:
            tag: ${{ steps.version.outputs.version_tag }}
            name: Version ${{ steps.version.outputs.version_tag }}
            generateReleaseNotes: true
            # draft: true
            # prerelease: true
            makeLatest: true
            updateOnlyUnreleased: true
            allowUpdates: true
